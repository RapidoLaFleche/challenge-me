# Minimum iOS version
platform :ios, '15.0'

# Désactiver les stats CocoaPods
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Source des specs
source 'https://cdn.cocoapods.org/'

# Configuration des builds
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Utiliser frameworks avec linkage static (requis pour certains plugins)
  use_frameworks! :linkage => :static
  use_modular_headers!

  # Installation automatique de tous les pods Flutter
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # ⚠️ NE PAS ajouter de pods manuellement ici !
  # Les dépendances (OneSignal, Supabase, etc.) sont gérées par pubspec.yaml
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Forcer iOS 15.0 minimum partout
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      
      # Swift version
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # ✅ Optimisations de build
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES' if config.name == 'Debug'
      
      # ✅ Résoudre les warnings de dépréciation
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      
      # ✅ Optimisation de la taille de l'app
      if config.name == 'Release'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = 's' # Optimiser pour la taille
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Osize'
      end
      
      # ✅ Fix pour les architectures Apple Silicon
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64' if ENV['SIMULATOR_DEVICE_NAME']
      
      # ✅ Autoriser les imports non modulaires
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
  end
end
